m <- matrix(c(1,2,4),nrow=3,ncol=3,byrow=T)
print(m)
print(as.factors(c(1,2,3,5,6,1,2,3)))
print(as.factor(c(1,2,3,5,6,1,2,3)))
print(as.factor(c(1,2,3,5,6,10,20,30)))
print(c(1,2,3,4,5,5)[1])
print(as.factor(c(1,2,3,4,5,5))[1])
m <- matrix(c(1,2,4,1201,0,1,2),nrow=8,ncol=2,byrow=T)
m <- matrix(c(1,2,4,1201,0,1,2),nrow=8,ncol=2)
m <- matrix(1:5,nrow=8,ncol=2)
m <- matrix(1:5,nrow=2,ncol=2)
m <- matrix(1:4,nrow=2,ncol=2)
m
m <- matrix(c(1,2,3,5,1,2,3,1,2,3,12,9),nrow=4,ncol=3,byrow=T)
m
n <- matrix(c("p","l","as","asda"),nrow=4,ncol=1,bycol=T)
n <- matrix(c("p","l","as","asda"),nrow=4,ncol=1)
n
cbind(m,n)
df <- data.frame(as=c(1,2,3,4),ple=c(0,5,4,2),momma=c(32,31,2,104))
df
df <- data.frame(as=c(1,2,3,4),ple=c("0","5","opo","./"),momma=c(32,31,2,104))
df
bill <- c(1,2,3)
hi <- c(04,1,2)
gaga <- c("13","p","o")
data.frame(bill,hi,gaga)
df
df[,2]
df[2,]
df$ple
df$ple[1]
df[2,2]
df[c(2,2)]
df[2]
df[2,]
df[,2]
df$ple
cbind(df[2],df[1])
cbind(df[,2],df[,1])
df["ple"]
install.packages(c("broom", "bslib", "cli", "digest", "evaluate", "highr", "htmltools", "isoband", "jsonlite", "openssl", "purrr", "rmarkdown", "tinytex", "xfun"))
install.packages("testthat")
library(testthat)
install.packages(c("cli", "curl", "dbplyr", "evaluate", "purrr", "rmarkdown", "stringi", "timechange"))
library(testthat)
# This is for practice
funct <- function(x) {
print(x*10)
}
funct(10)
usethis::use_testthat(3)
library(testthat)
library(testthat)
library(dplyr)
test_check(dplyr)
len("2e 23 23")
length("2 3 4 2sl ;s")
length(c(1,2,3,4))
a <- "sd s sa s d"
as.list(strsplit(a, "")[[1]])
a <- "sd s sa s d"
as.list(strsplit(a, " ")[[1]])
as.list(strsplit(a, "")[[2]])
a <- "sd s sa s d"
as.list(strsplit(a, "")[[1]])
length(as.list(strsplit(a, "")[[1]]))
c(as.list(strsplit(a, "")[[1]])
l
c(as.list(strsplit(a, "")[[1]]))
a <- "sd s sa s d"
alist <- as.list(strsplit(a, "")[[1]])
alist <- alist[alist != " "]
alist
a <- "mone yroscks"
alist <- as.list(strsplit(a, "")[[1]])
alist <- alist[alist != " "]
alist
is.character(1)
is.character("sad as da sdsa las444")
x <- "mone yroscks"
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
xlist
exists("pop",list("o","o","p","l"))
exists("p",list("o","o","p","l"))
"popo" %in% list("o","p","l")
"popo" %in% list("p","o","p","o")
length(xlist)
x <- "mone yroscks"
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
length(xlist)
xlist[1]
xlist[2]
xlist[4]
xlist
xlist[[2]]
xlist[[4]]
"E" %in% list("E","R")
"E" %in% list("E","R") == TRUE
purevowelcounter <- function(x) {
if (is.character(x) == FALSE) {
print("Invalid")
}
else {
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
purevowellist <- list("a","e","i","o","u")
counter <- 0
for (i in length(xlist)) {
if (xlist[[i]] %in% purevowellist == TRUE) {
counter <- counter + 1
}
else {
next
}
}
print(counter)
}
}
purevowelcounter(1)
# This is another practice function
purevowelcounter <- function(x) {
if (is.character(x) == FALSE) {
print("Invalid")
}
else {
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
purevowellist <- list("A","a","E","e","I","i","O","o","U","u")
counter <- 0
for (i in length(xlist)) {
if (xlist[[i]] %in% purevowellist == TRUE) {
counter <- counter + 1
}
else {
next
}
}
print(counter)
}
}
purevowelcounter("Invalied")
purevowelcounter("Invalied")
purevowelcounter("Invalied")
purevowelcounter("I")
purevowelcounter("In"
)
x <- "IN"
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
xlist
xlist[[2]]
xlist[[1]]
purevowellist <- list("A","a","E","e","I","i","O","o","U","u")
if ((xlist[[i]] %in% purevowellist) == TRUE) {
counter <- counter + 1
}
xlist[[i]] %in% purevowellist) == TRUE
((xlist[[i]] %in% purevowellist) == TRUE)
counter <- 0
for (i in length(xlist)) {
if ((xlist[[i]] %in% purevowellist) == TRUE) {
counter <- counter + 1
}
else {
next
}
}
counter
xlist[[1]] %in% purevowellist
xlist[[1]] %in% purevowellist == TRUE
xlist[[2]] %in% purevowellist == FALSE
xlist[[2]] %in% purevowellist == TRUE
install.packages(c("colorspace", "fansi", "fs", "sass", "vctrs", "vroom", "yaml"))
x <- "pop sap12 21312"
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
purevowellist <- list("A","a","E","e","I","i","O","o","U","u")
counter <- 0
xlist
length(xlist)
xlist
purevowelcounter <- function(x) {
if (is.character(x) == FALSE) {
print("Invalid")
}
else {
xlist <- as.list(strsplit(x, "")[[1]])
xlist <- xlist[xlist != " "]
purevowellist <- list("A","a","E","e","I","i","O","o","U","u")
counter <- 0
for (i in 1:length(xlist)) {
if ((xlist[[i]] %in% purevowellist) == TRUE) {
counter <- counter + 1
}
else {
next
}
}
print(counter)
}
}
purevowelcounter("POPOsiISAL!)")
purevowelcounter(1)
purevowelcounter("OIuj,.!@0_+;")
purevowelcounter(90)
TRUE & TRUE
TRUE & (TRUE | FALSE)
4*(9+4)
4*9+4
TRUE & FALSE
TRUE & FALSE & FALSE
FALSE & FALSE
TRUE & FALSE | FALSE
read.csv("C:\Users\Aakshay\Downloads\sample_data.csv",TRUE,",")
getwd
getwd()
read.csv("C:/Users/Aakshay/Downloads/sample_data.csv",TRUE,",")
message("This")
warning("This")
getwd
getwd()
read.csv("C:/Users/Aakshay/Downloads/sample_data.csv",TRUE,"")
read.csv("C:/Users/Aakshay/Downloads/sample_data.csv")
class(read.csv("C:/Users/Aakshay/Downloads/sample_data.csv"))
if (1 == 10){
print("no")
}
else {
if (1 == 10){
print("no")
}
else {
if (1 == 10) {
print("no")
}
if (1 == 10) {
print("no")
} else {
print("yes")
}
if (1 == 10) {
print("no")
}
else {
if (1 == 10) {
print("no")
} else {
print("yes")
}
1 == 10
1 = 10
1 == 10
if (1 == 10) == FALSE {
if ((1 == 10) == FALSE) {
print("no")
} else {
print("yes")
}
(file.exists("C:/Users/Aakshay/Downloads/sample_data.csv") == TRUE
)
(file.exists("C:/Users/Aakshay/Downloads/sample_data.csv"))
warning("THis")
file.size(read.csv("C:/Users/Aakshay/Downloads/sample_data.csv"))
file.size(read.csv("C:/Users/Aakshay/Downloads/sample_data.csv"))
file.exists(read.csv("C:/Users/Aakshay/Downloads/sample_data.csv"))
file.exists("C:/Users/Aakshay/Downloads/sample_data.csv"))
file.exists("C:/Users/Aakshay/Downloads/sample_data.csv")
file.size("C:/Users/Aakshay/Downloads/sample_data.csv")
data <- read.csv("C:/Users/Aakshay/Downloads/sample_data.csv")
dat
data
data <- read.csv("C:/Users/Aakshay/Downloads/sample_data2.csv")
data
len(data[,"day"])
length(data[,"day"])
any(data==NA)
any(data=="NA")
any(data==1)
any(data==NA)
data[,"day"]
c(data[,"day"])
c(data[,"day"])[4]
class(c(data[,"day"])[4])
any(data==NA)
NA==NA
any(is.na(data))
x <- data.frame(a = c(1,2,3,NaN),b = c(3,4,6,13))
x
any(is.na(x))
is.nan(x)
any(is.nan(x))
x[x$a == NaN,]
x
x[x$a == Na,]
x[x$a == NaN,]
x[x$b == 13,]
x[x$a == NaN,]
x[x$a == "NaN",]
x[x$a == "NaN",]
x[x$a == "NaN",]
read.csv("C:/Users/Aakshay/Downloads/sample_data.csv")
x <- read.csv("C:/Users/Aakshay/Downloads/sample_data.csv")
ncol(x)
colnames(x)
x[1]
x[2]
colnames(x[1])
colnames(x[1]) == "scientist"
colnames(x[1]) %in% c("scientist","day")
z <- data.frame(q = c(1,2,4))
z
colnames(z)
colnames(z) %in% c("q")
z <- data.frame(q = c(1,2,4), q = c(9,2,1))
z
w <- read.csv("C:/Users/Aakshay/Downloads/sample_data3.csv")
w
colnames(w[1]) == "scientist"
ncol(w) =2
ncol(w) == 2
r <- data.frame(a = c(12,32),b = c(3,4),d = c(9,0),e=(8,1))
r <- data.frame(a = c(12,32), b = c(3,4), d = c(9,0), e = c(8,1))
r
colnames(r)
c("a","b")
c("a","b") %in% colnames(r)
c("a") %in% colnames(r)
c("a") %in% c("b","d")
(c("a") %in% c("b","d")) == FALSE
x <- data.frame(a1 <- c(1,2,3,4), a2 <- c(1,5,3,9), a3 = (8,7,10,3.1))
x <- data.frame(a1 = c(1,2,3,4), a2 = c(1,5,3,9), a3 = c(8,7,10,3.1))
x
x$a1 == TRUE
c("scientist") %in% colnames(x)
c("c") %in% c("a","b")
# This function is designed to take a CSV file's data and organize it into a
# data frame with two columns labeled scientist and day
dataorganizer <- function(file) {
if (file.exists(file)) {
if (file.size(file) > 0) {
data <- read.csv(file)
if (any(is.na(data))) {
warning("There is at least 1 missing value located in the
data set.")
} else {
if (ncol(data) == 2) {
if (((colnames(data[1]) %in% c("scientist","day")) == TRUE) &
((colnames(data[2]) %in% c("scientist","day")) == TRUE)) {
print(data)
} else if ((((colnames(data[1]) %in%
c("scientist","day")) == TRUE) &
((colnames(data[2]) %in%
c("scientist","day")) == FALSE)) |
(((colnames(data[1]) %in%
c("scientist","day")) == FALSE) &
((colnames(data[2]) %in%
c("scientist","day")) == TRUE))) {
warning("Your data set is missing either a scientist or day
column.")
} else if (((colnames(data[1]) %in%
c("scientist","day")) == FALSE) &
((colnames(data[2]) %in%
c("scientist","day")) == FALSE)) {
warning("Your data set contains the wrong data and both of
its columns are not a scientist or day column.")
}
} else if (ncol(data) == 1) {
if (colnames(data) == "scientist") {
warning("Your data set only contains a scientist column and
is missing a day column.")
} else if (colnames(data) == "day") {
warning("Your data set only contains a day column and
is missing a scientist column.")
} else if ((colnames(data) %in% c("scientist","day")) == FALSE) {
warning("Your data set only contains a single column that
is neither a scientist or day column.")
}
} else if ((ncol(data)) > 2) {
if (((c("scientist") %in% colnames(data)) == TRUE) &
((c("day") %in% colnames(data)) == TRUE)) {
warning("Your data set contains extra columns.")
} else if (((c("scientist") %in% colnames(data)) == TRUE) &
((c("day") %in% colnames(data)) == FALSE)) {
warning("Your data set is missing a day column and
contains extra columns.")
} else if (((c("scientist") %in% colnames(data)) == FALSE) &
((c("day") %in% colnames(data)) == TRUE)) {
warning("Your data set is missing a scientist column and
contains extra columns.")
} else if (((c("scientist") %in% colnames(data)) == FALSE) &
((c("day") %in% colnames(data)) == FALSE)) {
warning("Your data set is missing both a scientist and
day column and contains extra columns.")
}
}
}
} else {
warning("The file is empty and contains no data.")
}
} else {
warning("The file does not exist.")
}
}
dataorganizer("C:/Users/Aakshay/Downloads/sample_data.csv")
dataorganizer("C:/Users/Aakshay/Downloads/sample_data2.csv")
dataorganizer("C:/Users/Aakshay/Downloads/sample_data3.csv")
library(devtools)
# This function is designed to take a CSV file's data and organize it into
# a data frame with two columns labeled scientist and day for Git Issue #2
# The function will also be tested using the testthat package in R
# for Git Issues #3-4
dataorganizer <- function(file) {
if (file.exists(file)) {
if (file.size(file) > 0) {
data <- read.csv(file)
if (any(is.na(data))) {
warning("There is at least 1 missing value located in the
data set.")
} else {
if (ncol(data) == 2) {
if (((colnames(data[1]) %in% c("scientist","day")) == TRUE) &
((colnames(data[2]) %in% c("scientist","day")) == TRUE)) {
print(data)
} else if ((((colnames(data[1]) %in%
c("scientist","day")) == TRUE) &
((colnames(data[2]) %in%
c("scientist","day")) == FALSE)) |
(((colnames(data[1]) %in%
c("scientist","day")) == FALSE) &
((colnames(data[2]) %in%
c("scientist","day")) == TRUE))) {
warning("Your data set is missing either a scientist or day
column.")
} else if (((colnames(data[1]) %in%
c("scientist","day")) == FALSE) &
((colnames(data[2]) %in%
c("scientist","day")) == FALSE)) {
warning("Your data set contains the wrong data and both of
its columns are not a scientist or day column.")
}
} else if (ncol(data) == 1) {
if (colnames(data) == "scientist") {
warning("Your data set only contains a scientist column and
is missing a day column.")
} else if (colnames(data) == "day") {
warning("Your data set only contains a day column and
is missing a scientist column.")
} else if ((colnames(data) %in% c("scientist","day")) == FALSE) {
warning("Your data set only contains a single column that
is neither a scientist or day column.")
}
} else if ((ncol(data)) > 2) {
if (((c("scientist") %in% colnames(data)) == TRUE) &
((c("day") %in% colnames(data)) == TRUE)) {
warning("Your data set contains extra columns.")
} else if (((c("scientist") %in% colnames(data)) == TRUE) &
((c("day") %in% colnames(data)) == FALSE)) {
warning("Your data set is missing a day column and
contains extra columns.")
} else if (((c("scientist") %in% colnames(data)) == FALSE) &
((c("day") %in% colnames(data)) == TRUE)) {
warning("Your data set is missing a scientist column and
contains extra columns.")
} else if (((c("scientist") %in% colnames(data)) == FALSE) &
((c("day") %in% colnames(data)) == FALSE)) {
warning("Your data set is missing both a scientist and
day column and contains extra columns.")
}
}
}
} else {
warning("The file is empty and contains no data.")
}
} else {
warning("The file does not exist.")
}
}
getwd
getwd()
library(devtools)
install.packages("devtools")
library(devtools)
use_r("C:/Users/Aakshay/OneDrive/Documents/Git Projects/
git_and_r_package_exercises/
Git Issue Data Organizing Practice Function.R")
library(DBI)
install.packages(c("dplyr", "forcats", "gargle"))
d <- data.frame("x" = c(12,4))
print(class(d))
class(d) == "data.frame"
class(d) != "data.frame"
d
d <- data.frame("a"=c(9,3,1),"b"=c(0,6,0))
d
class(d)
class(d)
class(d) == "data.frame"
warehouse_disconnect <- function(conn){
#  if (class(conn) == "PqConnection") {
if (conn > 9) {
return(TRUE)
}
}
warehouse_disconnect(10)
getwd()
setwd("C:/Users/Aakshay/OneDrive/Documents/Git Projects/benchlingr")
usethis::use_r("warehouse_disconnect.R")
devtools::load_all()
usethis::use_test("warehouse_disconnect.R")
