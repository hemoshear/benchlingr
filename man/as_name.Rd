% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_name.R
\name{as_name}
\alias{as_name}
\title{Extract the 'name' attribute for all entities through the responses made to their bulk-get API
endpoints or single API endpoint if bulk-get API endpoints register as NA for that entity.}
\usage{
as_name(
  entity_id,
  benchling_api_key = Sys.getenv("BENCHLING_API_KEY"),
  return_df = FALSE
)
}
\arguments{
\item{entity_id}{Either a character vector or list that contains the entities. All entities 
in the list or character vector must be character strings.}

\item{return_df}{If return_df is TRUE, then the function will return a two column data frame
where the first column is named 'id' and represents the names of the identifiers or elements from 
entity_id and the second column is named 'name' and represents that element's corresponding 'name' 
attribute extracted from the request made to its set of bulk-get API endpoints or single API 
endpoint. If FALSE, the function will return a named vector where the names are the elements from 
entity_id and the values are each element's corresponding 'name' attribute.}
}
\value{
* If return_df is TRUE, 'as_name.R' returns a two column data frame where the first column is 
named 'id' and represents the names of the identifiers or elements from entity_id and the
second column is named 'name' and represents that element's corresponding 'name' attribute.

* If return_df is FALSE, 'as_name.R' returns a named vector where the names are the identifiers 
or elements from entity_id and the values are each element's corresponding 'name' attribute.
}
\description{
This function will take a character vector or list of character strings and for each element 
send a request to that element's set of bulk-get API endpoints or single API endpoint if the 
bulk-get API endpoints are written as NA and analyze the response from that request and extract 
the 'name' attribute.
}
\examples{
\dontrun{
entity_id1 <- c("seq_Cuf0bmCm", "bfi_9fKcrORv")
entities1 <- as_name(entity_id=entity_id1, benchling_api_key = Sys.getenv("BENCHLING_API_KEY"), return_df=FALSE)

entity_id2 <- c("seq_Cuf0bmCm", "seq_Cuf0umCm", "bfi_9fKcrORv", "etr_n123p")
entities2 <- as_name(entity_id=entity_id2, benchling_api_key = Sys.getenv("BENCHLING_API_KEY"), return_df=TRUE)
}
}
