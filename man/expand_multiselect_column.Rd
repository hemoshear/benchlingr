% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expand_multiselect_column.R
\name{expand_multiselect_column}
\alias{expand_multiselect_column}
\title{Unpack the values in a JSON column from a data frame retrieved from
the data warehouse.}
\usage{
expand_multiselect_column(
  conn,
  df,
  column,
  shape = "long",
  column_prefix = NULL
)
}
\arguments{
\item{conn}{Database connection opened by `warehouse_connect`. This is used
to ensure that the specified `column` is actually a multi-select field
defined in the schema.}

\item{df}{Input data frame retrieved from the data warehouse.}

\item{column}{Name of the JSON column that should be expanded.}

\item{shape}{The `shape` argument determines if the values in the JSON column
should be unpacked to create new rows (`long`) or new columns (`wide`).}

\item{column_prefix}{If the `shape` argument is `wide`, then new columns
are created in the data frame. By default, the new column names will
start with the name of the original column and end with an integer (1, 2, ..., 
number of maximum values in a single row in the JSON field.). One can
override this behavior by passing in a character vector to the `column_prefix`
argument. Using the `column_prefix` argument is not recommended if the
column in an entity type, as one will not be able to use `get_entity_table` 
or `replace_entity_id_with_name` with the new columns.}
}
\value{
Data frame with the values in `column` unpacked.
}
\description{
When a schema contains a multi-select field, the column in the data frame
retrieved from the data warehouse will be a JSON type. This function allows
one to unpack the values in the column, creating either new rows or new 
columns in the data frame.
}
\examples{
conn <- warehouse_connect("hemoshear")
DBI::dbDisconnect(conn)

}
