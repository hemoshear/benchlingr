# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [ 30-fix-cache-step-in-github-actions ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:

name: pkgdown

jobs:
  pkgdown:
    runs-on: ubuntu-latest
    # Only restrict concurrency for non-PR jobs
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.AUTH_TOKEN_GITHUB }}
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

#      - name: Cache packages
#        uses: actions/cache@v1
#        with:
#          path: ${{ env.RENV_PATHS_ROOT }}
#          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-renv-
#
#      - name: Restore packages
#        shell: Rscript {0}
#        run: |
#          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
#          renv::restore()

#      - name: Install and activate renv
#        run: |
#          install.packages("renv")
#          renv::activate()
#        shell: Rscript {0}
#
#      - name: Get R and OS version
#        id: get-version
#        run: |
#          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
#          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
#        shell: Rscript {0}
#
#      - name: Restore Renv package cache
#        uses: actions/cache@v2
#        with:
#          path: ${{ env.RENV_PATHS_ROOT }}
#          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-${{ hashFiles('renv.lock') }}
#          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-
#
#      - name: Install renv dependencies
#        run: renv::restore()
#        shell: Rscript {0}
#      - name: Install devtools
#        run: |
#          sudo Rscript -e "install.packages('devtools')"
#          sudo Rscript -e "install.packages("remotes")"
#          sudo Rscript -e "remotes::install_github("hemoshear/benchlingr", ref='main', auth_token={{secret.AUTH_TOKEN_GITHUB}})"

#      - name: Install benchlingr
#        shell: Rscript {0}
#        run: |
#          devtools::install()
#          install.packages("remotes")
#          remotes::install_github("hemoshear/benchlingr", ref='main', auth_token={{secret.AUTH_TOKEN_GITHUB}})

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Deploy to GitHub pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          clean: false
          branch: gh-pages
          folder: docs
