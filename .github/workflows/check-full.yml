# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:


name: Ubuntu R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # Use older ubuntu to maximise backward compatibility
          - {os: ubuntu-18.04,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-18.04,   r: 'release'}

    env:
      R_KEEP_PKG_SOURCE: yes
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev  libfribidi-dev

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Set Benchling R package environment variables
        run: |
          echo "BENCHLING_DEV_WAREHOUSE_USERNAME=${{ secrets.BENCHLING_DEV_WAREHOUSE_USERNAME}}" >> ~/.Renviron
          echo "BENCHLING_DEV_WAREHOUSE_PASSWORD=${{ secrets.BENCHLING_DEV_WAREHOUSE_PASSWORD }}" >> ~/.Renviron
          echo "BENCHLING_DEV_API_KEY=${{ secrets.BENCHLING_DEV_API_KEY }}" >> ~/.Renviron
      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
            ${{ runner.os }}-

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
          
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          
      - name: setup r-reticulate venv
        shell: Rscript {0}
        run: |
          python_packages <- 
            c("benchling-sdk")
          
          library(reticulate)
          virtualenv_create("benchling-reticulate", Sys.which("python"))
          virtualenv_install("benchling-reticulate", python_packages)
          
          path_to_python <- virtualenv_python("benchling-reticulate")
          writeLines(sprintf("RETICULATE_PYTHON=%s", path_to_python),
                     Sys.getenv("GITHUB_ENV"))
                     
      - name: Comprehensive check
        uses: r-lib/actions/check-r-package@v1
        with:
          args: "--no-manual"
      
      - name: CRAN check
        uses: r-lib/actions/check-r-package@v1
        with:
          args: c("--no-manual", "--as-cran")
      
      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check